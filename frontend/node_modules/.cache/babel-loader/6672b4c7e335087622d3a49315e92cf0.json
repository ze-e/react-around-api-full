{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ZEE\\\\Yandex\\\\react-around-api-full\\\\frontend\\\\src\\\\components\\\\EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\n\nfunction EditAvatarPopup(props) {\n  _s();\n\n  //loading\n  const [loading, setLoading] = React.useState(false); //form field\n\n  const [link, setLink] = React.useState(''); //reset form on open\n\n  React.useEffect(() => {\n    setLink('');\n    setFormInvalid(true);\n    setLoading(false);\n  }, [props.isOpen]);\n\n  function handleSubmit(e) {\n    if (!formInvalid) {\n      e.preventDefault();\n      props.onUpdateAvatar(link); //set loading\n\n      setLoading(true);\n    }\n  }\n  /* CLIENT FORM VALIDATION\r\n    By default, no validation error for blank required field is \r\n    shown at the beginning, but the submit button will be\r\n    disabled.\r\n      The button style/disabled state and individual field validations are \r\n    independent of one another. Field validations control only the field styles, \r\n    and form/button validation controls the ability to send the form\r\n  */\n\n\n  const formRef = React.useRef();\n  const [linkError, setLinkError] = React.useState('');\n  const [formInvalid, setFormInvalid] = React.useState(true);\n\n  function handleChange(e) {\n    //set value\n    setLink(e.target.value); //set error\n\n    props.fieldValidator(e.target, setLinkError);\n  }\n\n  function validateForm() {\n    props.formValidator(formRef.current, '.popup__input') ? setFormInvalid(true) : setFormInvalid(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `popup popup_type_edit-avatar ${props.isOpen && 'popup_state_opened'}`,\n    onClick: e => {\n      props.onOutsideClick(e, 'popup_type_edit-avatar');\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: `popup__form popup__form_type_edit-avatar`,\n        onSubmit: handleSubmit,\n        onChange: validateForm,\n        ref: formRef,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `popup__close popup__close_type_edit-avatar`,\n          type: \"button\",\n          onClick: props.onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"popup__title\",\n          children: \"Change profile picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: `popup__input popup__input-avatar ${linkError !== '' && 'popup__input_type_error'}`,\n          id: \"avatar-input\",\n          type: \"url\",\n          name: \"avatar\",\n          value: link,\n          placeholder: \"Image URL\",\n          required: true,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `popup__input-error ${linkError !== '' && 'popup__error_visible'}`,\n          id: \"avatar-input-error\",\n          children: linkError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `popup__submit popup__edit-avatar-submit ${formInvalid && 'popup__submit_disabled'}`,\n          type: \"submit\",\n          disabled: formInvalid,\n          children: `${loading ? 'Loading...' : 'Save'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAvatarPopup, \"/ze8Yu4vKRtdHdMkU+HD3lzk4AE=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["C:/Users/ZEE/Yandex/react-around-api-full/frontend/src/components/EditAvatarPopup.js"],"names":["React","EditAvatarPopup","props","loading","setLoading","useState","link","setLink","useEffect","setFormInvalid","isOpen","handleSubmit","e","formInvalid","preventDefault","onUpdateAvatar","formRef","useRef","linkError","setLinkError","handleChange","target","value","fieldValidator","validateForm","formValidator","current","onOutsideClick","onClose"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nfunction EditAvatarPopup(props){\r\n  //loading\r\n  const [loading, setLoading] = React.useState(false);\r\n  //form field\r\n  const [link, setLink] = React.useState('');\r\n\r\n  //reset form on open\r\n  React.useEffect(()=>{\r\n    setLink('');\r\n    setFormInvalid(true);\r\n    setLoading(false);\r\n  },[props.isOpen])\r\n\r\n  function handleSubmit(e) {\r\n    if(!formInvalid){\r\n      e.preventDefault();\r\n      props.onUpdateAvatar(link);\r\n      //set loading\r\n      setLoading(true);\r\n    }\r\n  } \r\n\r\n  /* CLIENT FORM VALIDATION\r\n    By default, no validation error for blank required field is \r\n    shown at the beginning, but the submit button will be\r\n    disabled.\r\n\r\n    The button style/disabled state and individual field validations are \r\n    independent of one another. Field validations control only the field styles, \r\n    and form/button validation controls the ability to send the form\r\n  */\r\n  const formRef = React.useRef();\r\n  const [linkError, setLinkError] = React.useState('');\r\n  const [formInvalid, setFormInvalid] = React.useState(true)\r\n\r\n  function handleChange(e) {\r\n      //set value\r\n      setLink(e.target.value);\r\n      //set error\r\n      props.fieldValidator(e.target, setLinkError)\r\n  }\r\n  \r\n    function validateForm(){\r\n      props.formValidator(formRef.current,'.popup__input')? setFormInvalid(true) : setFormInvalid(false);\r\n    }\r\n\r\n  return(\r\n    <section className={`popup popup_type_edit-avatar ${props.isOpen  && 'popup_state_opened'}`} onClick={(e)=>{props.onOutsideClick(e,'popup_type_edit-avatar')}}>\r\n    <div className=\"popup__container\">\r\n      <form className={`popup__form popup__form_type_edit-avatar`} onSubmit={handleSubmit} onChange={validateForm} ref={formRef}>\r\n        <button className={`popup__close popup__close_type_edit-avatar`} type=\"button\" onClick={props.onClose}></button>  \r\n        <h4 className=\"popup__title\">Change profile picture</h4>\r\n        <input className={`popup__input popup__input-avatar ${linkError !=='' && 'popup__input_type_error'}`} id=\"avatar-input\" type=\"url\" name=\"avatar\"  value={link} placeholder=\"Image URL\" required onChange={handleChange}/>\r\n      <span className={`popup__input-error ${linkError !=='' && 'popup__error_visible'}`} id=\"avatar-input-error\">{linkError}</span>\r\n        <button className={`popup__submit popup__edit-avatar-submit ${formInvalid && 'popup__submit_disabled'}`} type=\"submit\" disabled={formInvalid}>{`${loading ? 'Loading...':'Save'}`}</button>\r\n      </form>\r\n    </div>\r\n  </section> \r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;"]},"metadata":{},"sourceType":"module"}