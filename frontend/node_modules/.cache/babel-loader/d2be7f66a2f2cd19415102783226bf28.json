{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ZEE\\\\Yandex\\\\react-around-api-full\\\\frontend\\\\src\\\\components\\\\AddPlacePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\n\nfunction AddPlacePopup(props) {\n  _s();\n\n  //loading\n  const [loading, setLoading] = React.useState(false); //fields\n\n  const [name, setName] = React.useState('');\n  const [link, setLink] = React.useState('');\n\n  function handleSubmit(e) {\n    if (!formInvalid) {\n      e.preventDefault(); // Pass the values of the managed components to the external handler\n\n      props.onAddPlace(name, link); //set loading\n\n      setLoading(true);\n    }\n  }\n\n  React.useEffect(() => {\n    setName('');\n    setLink('');\n    setFormInvalid(true);\n    setLoading(false);\n  }, [props.isOpen]);\n  /* CLIENT FORM VALIDATION\r\n    By default, no validation error for blank required field is \r\n    shown at the beginning, but the submit button will be\r\n    disabled.\r\n      The button style/disabled state and individual field validations are \r\n    independent of one another. Field validations control only the field styles, \r\n    and form/button validation controls the ability to send the form\r\n  */\n\n  const formRef = React.useRef();\n  const [nameError, setNameError] = React.useState('');\n  const [linkError, setLinkError] = React.useState('');\n  const [formInvalid, setFormInvalid] = React.useState(true);\n\n  function handleName(e) {\n    //set value\n    setName(e.target.value); //set error\n\n    props.fieldValidator(e.target, setNameError);\n  }\n\n  function handleLink(e) {\n    //set value\n    setLink(e.target.value); //set error\n\n    props.fieldValidator(e.target, setLinkError);\n  }\n\n  function validateForm() {\n    props.formValidator(formRef.current, '.popup__input') ? setFormInvalid(true) : setFormInvalid(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `popup popup_type_add-card ${props.isOpen && 'popup_state_opened'}`,\n    onClick: e => {\n      props.onOutsideClick(e, 'popup_type_add-card');\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: `popup__form popup__form_type_add-card`,\n        onSubmit: handleSubmit,\n        onChange: validateForm,\n        ref: formRef,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `popup__close popup__close_type_add-card`,\n          type: \"button\",\n          onClick: props.onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"popup__title\",\n          children: \"New Place\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: `popup__input popup__input-card-name ${nameError !== '' && 'popup__input_type_error'}`,\n          id: \"card-name-input\",\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Title\",\n          required: true,\n          minLength: \"1\",\n          maxLength: \"30\",\n          value: name,\n          onChange: handleName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `popup__input-error\" id=\"card-name-input-error ${nameError !== '' && 'popup__error_visible'}`,\n          children: nameError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: `popup__input popup__input-card-url ${linkError !== '' && 'popup__input_type_error'}`,\n          id: \"url-input\",\n          type: \"url\",\n          name: \"link\",\n          placeholder: \"Image URL\",\n          required: true,\n          value: link,\n          onChange: handleLink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `popup__input-error ${linkError !== '' && 'popup__error_visible'}`,\n          id: \"url-input-error\",\n          children: linkError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `popup__submit popup__add-card-submit ${formInvalid && 'popup__submit_disabled'}`,\n          disabled: formInvalid,\n          type: \"submit\",\n          children: `${loading ? 'Loading...' : 'Create'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddPlacePopup, \"HCbF0q3PSWDJ5yWCvNc/POlChps=\");\n\n_c = AddPlacePopup;\nexport default AddPlacePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"sources":["C:/Users/ZEE/Yandex/react-around-api-full/frontend/src/components/AddPlacePopup.js"],"names":["React","AddPlacePopup","props","loading","setLoading","useState","name","setName","link","setLink","handleSubmit","e","formInvalid","preventDefault","onAddPlace","useEffect","setFormInvalid","isOpen","formRef","useRef","nameError","setNameError","linkError","setLinkError","handleName","target","value","fieldValidator","handleLink","validateForm","formValidator","current","onOutsideClick","onClose"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nfunction AddPlacePopup(props){\r\n  //loading\r\n  const [loading, setLoading] = React.useState(false);\r\n  \r\n  //fields\r\n  const [name, setName] = React.useState('');\r\n  const [link, setLink] = React.useState('');\r\n\r\n  function handleSubmit(e) {\r\n    if(!formInvalid){\r\n      e.preventDefault();\r\n      // Pass the values of the managed components to the external handler\r\n      props.onAddPlace(name, link);\r\n      //set loading\r\n      setLoading(true);\r\n    }\r\n  } \r\n\r\n  React.useEffect(()=>{\r\n    setName('');\r\n    setLink('');\r\n    setFormInvalid(true);\r\n    setLoading(false);\r\n  },[props.isOpen])\r\n\r\n  /* CLIENT FORM VALIDATION\r\n    By default, no validation error for blank required field is \r\n    shown at the beginning, but the submit button will be\r\n    disabled.\r\n\r\n    The button style/disabled state and individual field validations are \r\n    independent of one another. Field validations control only the field styles, \r\n    and form/button validation controls the ability to send the form\r\n  */\r\n  const formRef = React.useRef();\r\n  const [nameError, setNameError] = React.useState('');\r\n  const [linkError, setLinkError] = React.useState('');\r\n  const [formInvalid, setFormInvalid] = React.useState(true)\r\n\r\n  function handleName(e) {\r\n    //set value\r\n    setName(e.target.value);\r\n    //set error\r\n    props.fieldValidator(e.target, setNameError)\r\n  }\r\n\r\n  function handleLink(e) {\r\n    //set value\r\n    setLink(e.target.value);\r\n    //set error\r\n    props.fieldValidator(e.target, setLinkError)\r\n  }\r\n  \r\n    function validateForm(){\r\n      props.formValidator(formRef.current,'.popup__input')? setFormInvalid(true) : setFormInvalid(false);\r\n    }\r\n\r\n  return(\r\n    <section className={`popup popup_type_add-card ${props.isOpen  && 'popup_state_opened'}`} onClick={(e)=>{props.onOutsideClick(e,'popup_type_add-card')}}>\r\n    <div className=\"popup__container\">\r\n      <form className={`popup__form popup__form_type_add-card`} onSubmit={handleSubmit} onChange={validateForm} ref={formRef}>\r\n        <button className={`popup__close popup__close_type_add-card`} type=\"button\" onClick={props.onClose}></button>  \r\n        <h4 className=\"popup__title\">New Place</h4>\r\n        <input className={`popup__input popup__input-card-name ${nameError !=='' && 'popup__input_type_error'}`} id=\"card-name-input\" type=\"text\" name=\"name\" placeholder=\"Title\" required minLength=\"1\" maxLength=\"30\" value={name} onChange={handleName}/>\r\n      <span className={`popup__input-error\" id=\"card-name-input-error ${nameError !=='' && 'popup__error_visible'}`}>{nameError}</span>\r\n      \r\n      <input className={`popup__input popup__input-card-url ${linkError !=='' && 'popup__input_type_error'}`} id=\"url-input\" type=\"url\" name=\"link\" placeholder=\"Image URL\" required value={link} onChange={handleLink}/>\r\n      <span className={`popup__input-error ${linkError !=='' && 'popup__error_visible'}`} id=\"url-input-error\">{linkError}</span>\r\n  <button className={`popup__submit popup__add-card-submit ${formInvalid && 'popup__submit_disabled'}`} disabled={formInvalid} type=\"submit\">{`${loading ? 'Loading...':'Create'}`}</button>\r\n      </form>\r\n    </div>\r\n  </section>  \r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;"]},"metadata":{},"sourceType":"module"}