{"ast":null,"code":"import _slicedToArray from\"C:/Users/ZEE/Yandex/react-around-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';function EditAvatarPopup(props){//loading\nvar _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),loading=_React$useState2[0],setLoading=_React$useState2[1];//form field\nvar _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),link=_React$useState4[0],setLink=_React$useState4[1];//reset form on open\nReact.useEffect(function(){setLink('');setFormInvalid(true);setLoading(false);},[props.isOpen]);function handleSubmit(e){if(!formInvalid){e.preventDefault();props.onUpdateAvatar(link);//set loading\nsetLoading(true);}}/* CLIENT FORM VALIDATION\r\n    By default, no validation error for blank required field is \r\n    shown at the beginning, but the submit button will be\r\n    disabled.\r\n\r\n    The button style/disabled state and individual field validations are \r\n    independent of one another. Field validations control only the field styles, \r\n    and form/button validation controls the ability to send the form\r\n  */var formRef=React.useRef();var _React$useState5=React.useState(''),_React$useState6=_slicedToArray(_React$useState5,2),linkError=_React$useState6[0],setLinkError=_React$useState6[1];var _React$useState7=React.useState(true),_React$useState8=_slicedToArray(_React$useState7,2),formInvalid=_React$useState8[0],setFormInvalid=_React$useState8[1];function handleChange(e){//set value\nsetLink(e.target.value);//set error\nprops.fieldValidator(e.target,setLinkError);}function validateForm(){props.formValidator(formRef.current,'.popup__input')?setFormInvalid(true):setFormInvalid(false);}return/*#__PURE__*/_jsx(\"section\",{className:\"popup popup_type_edit-avatar \".concat(props.isOpen&&'popup_state_opened'),onClick:function onClick(e){props.onOutsideClick(e,'popup_type_edit-avatar');},children:/*#__PURE__*/_jsx(\"div\",{className:\"popup__container\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"popup__form popup__form_type_edit-avatar\",onSubmit:handleSubmit,onChange:validateForm,ref:formRef,children:[/*#__PURE__*/_jsx(\"button\",{className:\"popup__close popup__close_type_edit-avatar\",type:\"button\",onClick:props.onClose}),/*#__PURE__*/_jsx(\"h4\",{className:\"popup__title\",children:\"Change profile picture\"}),/*#__PURE__*/_jsx(\"input\",{className:\"popup__input popup__input-avatar \".concat(linkError!==''&&'popup__input_type_error'),id:\"avatar-input\",type:\"url\",name:\"avatar\",value:link,placeholder:\"Image URL\",required:true,onChange:handleChange}),/*#__PURE__*/_jsx(\"span\",{className:\"popup__input-error \".concat(linkError!==''&&'popup__error_visible'),id:\"avatar-input-error\",children:linkError}),/*#__PURE__*/_jsx(\"button\",{className:\"popup__submit popup__edit-avatar-submit \".concat(formInvalid&&'popup__submit_disabled'),type:\"submit\",disabled:formInvalid,children:\"\".concat(loading?'Loading...':'Save')})]})})});}export default EditAvatarPopup;","map":{"version":3,"sources":["C:/Users/ZEE/Yandex/react-around-api-full/frontend/src/components/EditAvatarPopup.js"],"names":["React","EditAvatarPopup","props","useState","loading","setLoading","link","setLink","useEffect","setFormInvalid","isOpen","handleSubmit","e","formInvalid","preventDefault","onUpdateAvatar","formRef","useRef","linkError","setLinkError","handleChange","target","value","fieldValidator","validateForm","formValidator","current","onOutsideClick","onClose"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nfunction EditAvatarPopup(props){\r\n  //loading\r\n  const [loading, setLoading] = React.useState(false);\r\n  //form field\r\n  const [link, setLink] = React.useState('');\r\n\r\n  //reset form on open\r\n  React.useEffect(()=>{\r\n    setLink('');\r\n    setFormInvalid(true);\r\n    setLoading(false);\r\n  },[props.isOpen])\r\n\r\n  function handleSubmit(e) {\r\n    if(!formInvalid){\r\n      e.preventDefault();\r\n      props.onUpdateAvatar(link);\r\n      //set loading\r\n      setLoading(true);\r\n    }\r\n  } \r\n\r\n  /* CLIENT FORM VALIDATION\r\n    By default, no validation error for blank required field is \r\n    shown at the beginning, but the submit button will be\r\n    disabled.\r\n\r\n    The button style/disabled state and individual field validations are \r\n    independent of one another. Field validations control only the field styles, \r\n    and form/button validation controls the ability to send the form\r\n  */\r\n  const formRef = React.useRef();\r\n  const [linkError, setLinkError] = React.useState('');\r\n  const [formInvalid, setFormInvalid] = React.useState(true)\r\n\r\n  function handleChange(e) {\r\n      //set value\r\n      setLink(e.target.value);\r\n      //set error\r\n      props.fieldValidator(e.target, setLinkError)\r\n  }\r\n  \r\n    function validateForm(){\r\n      props.formValidator(formRef.current,'.popup__input')? setFormInvalid(true) : setFormInvalid(false);\r\n    }\r\n\r\n  return(\r\n    <section className={`popup popup_type_edit-avatar ${props.isOpen  && 'popup_state_opened'}`} onClick={(e)=>{props.onOutsideClick(e,'popup_type_edit-avatar')}}>\r\n    <div className=\"popup__container\">\r\n      <form className={`popup__form popup__form_type_edit-avatar`} onSubmit={handleSubmit} onChange={validateForm} ref={formRef}>\r\n        <button className={`popup__close popup__close_type_edit-avatar`} type=\"button\" onClick={props.onClose}></button>  \r\n        <h4 className=\"popup__title\">Change profile picture</h4>\r\n        <input className={`popup__input popup__input-avatar ${linkError !=='' && 'popup__input_type_error'}`} id=\"avatar-input\" type=\"url\" name=\"avatar\"  value={link} placeholder=\"Image URL\" required onChange={handleChange}/>\r\n      <span className={`popup__input-error ${linkError !=='' && 'popup__error_visible'}`} id=\"avatar-input-error\">{linkError}</span>\r\n        <button className={`popup__submit popup__edit-avatar-submit ${formInvalid && 'popup__submit_disabled'}`} type=\"submit\" disabled={formInvalid}>{`${loading ? 'Loading...':'Save'}`}</button>\r\n      </form>\r\n    </div>\r\n  </section> \r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;"]},"metadata":{},"sourceType":"module"}