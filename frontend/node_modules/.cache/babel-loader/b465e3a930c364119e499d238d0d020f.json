{"ast":null,"code":"import _classCallCheck from\"C:/Users/ZEE/Yandex/react-around-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/ZEE/Yandex/react-around-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{baseURL as BASE_URL}from'./config';var Auth=/*#__PURE__*/function(){function Auth(){_classCallCheck(this,Auth);}_createClass(Auth,[{key:\"register\",value:function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({\"email\":email,\"password\":password})}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"Error: \".concat(res.statusText));});}},{key:\"login\",value:function login(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({\"email\":email,\"password\":password})}).then(function(response){return response.json();}).then(function(res){if(res.token){localStorage.setItem('token',res.token);return res;}});}},{key:\"authorize\",value:function authorize(){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Content-Type':'application/json','authorization':\"\".concat(localStorage.getItem('token'))}}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"Error: \".concat(res.statusText));});}}]);return Auth;}();export var auth=new Auth();","map":{"version":3,"sources":["C:/Users/ZEE/Yandex/react-around-api-full/frontend/src/utils/auth.js"],"names":["baseURL","BASE_URL","Auth","email","password","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","statusText","response","token","localStorage","setItem","getItem","auth"],"mappings":"gVAAA,OAAQA,OAAO,GAAIC,CAAAA,QAAnB,KAAkC,UAAlC,C,GAEMC,CAAAA,I,gIACKC,K,CAAOC,Q,CAAS,CACvB,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CACjCK,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAC,QAAUP,KAAX,CAAkB,WAAaC,QAA/B,CAAf,CAN2B,CAAvB,CAAL,CAQNO,IARM,CAQD,SAACC,GAAD,CAAS,CACb,GAAGA,GAAG,CAACC,EAAP,CAAU,CACR,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACD,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,kBAAyBJ,GAAG,CAACK,UAA7B,EAAP,CACD,CAbM,CAAP,CAcD,C,oCAEKd,K,CAAOC,Q,CAAS,CACpB,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CACjCK,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFwB,CAKjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAC,QAAUP,KAAX,CAAkB,WAAaC,QAA/B,CAAf,CAL2B,CAAvB,CAAL,CAONO,IAPM,CAOD,SAACO,QAAD,QAAcA,CAAAA,QAAQ,CAACJ,IAAT,EAAd,EAPC,EAQNH,IARM,CAQD,SAACC,GAAD,CAAS,CACb,GAAGA,GAAG,CAACO,KAAP,CAAa,CACXC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BT,GAAG,CAACO,KAAlC,EACA,MAAOP,CAAAA,GAAP,CACD,CACF,CAbM,CAAP,CAcD,C,6CAEU,CACT,MAAOP,CAAAA,KAAK,WAAIJ,QAAJ,cAAyB,CACnCK,MAAM,CAAE,KAD2B,CAEnCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEP,0BAAoBa,YAAY,CAACE,OAAb,CAAqB,OAArB,CAApB,CAFO,CAF0B,CAAzB,CAAL,CAONX,IAPM,CAOD,SAACC,GAAD,CAAS,CACb,GAAGA,GAAG,CAACC,EAAP,CAAU,CACR,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACD,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,kBAAyBJ,GAAG,CAACK,UAA7B,EAAP,CACD,CAZM,CAAP,CAaD,C,oBAIH,MAAO,IAAMM,CAAAA,IAAI,CAAG,GAAIrB,CAAAA,IAAJ,EAAb","sourcesContent":["import {baseURL as BASE_URL} from './config';\r\n\r\nclass Auth{\r\n  register(email, password){\r\n    return fetch(`${BASE_URL}/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\"email\" : email, \"password\" : password})\r\n    })\r\n    .then((res) => {\r\n      if(res.ok){\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Error: ${res.statusText}`);\r\n    })\r\n  }\r\n\r\n  login(email, password){\r\n    return fetch(`${BASE_URL}/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\"email\" : email, \"password\" : password})\r\n    })\r\n    .then((response) => response.json())\r\n    .then((res) => {\r\n      if(res.token){\r\n        localStorage.setItem('token', res.token);\r\n        return res;\r\n      }\r\n    })\r\n  }\r\n\r\n  authorize(){\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'authorization': `${localStorage.getItem('token')}`\r\n      }\r\n    })\r\n    .then((res) => {\r\n      if(res.ok){\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Error: ${res.statusText}`);\r\n    })  \r\n  }\r\n\r\n}\r\n\r\nexport const auth = new Auth();"]},"metadata":{},"sourceType":"module"}