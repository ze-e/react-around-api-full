{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ZEE\\\\Yandex\\\\react-around-api-full\\\\frontend\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nfunction Login(props) {\n  _s();\n\n  //loading\n  const [loading, setLoading] = React.useState(false); //form field\n\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState(''); //reset form on open\n\n  React.useEffect(() => {\n    setFormInvalid(true);\n    setLoading(false);\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!formInvalid) {\n      //check if the form is valid before sending\n      //login user\n      setLoading(true);\n      props.logInUser(email, password); //set loading\n\n      setLoading(false);\n    }\n  }\n  /* CLIENT FORM VALIDATION\r\n    By default, no validation error for blank required field is \r\n    shown at the beginning, but the submit button will be\r\n    disabled.\r\n      The button style/disabled state and individual field validations are \r\n    independent of one another. Field validations control only the field styles, \r\n    and form/button validation controls the ability to send the form\r\n  */\n\n\n  const formRef = React.useRef();\n  const [emailError, setEmailError] = React.useState('');\n  const [passwordError, setPasswordError] = React.useState('');\n  const [formInvalid, setFormInvalid] = React.useState(true);\n\n  function handleEmail(e) {\n    //set value\n    setEmail(e.target.value); //set error\n\n    props.fieldValidator(e.target, setEmailError);\n  }\n\n  function handlePassword(e) {\n    //set value\n    setPassword(e.target.value); //set error\n\n    props.fieldValidator(e.target, setPasswordError);\n  }\n\n  function validateForm() {\n    props.formValidator(formRef.current, '.login__input') ? setFormInvalid(true) : setFormInvalid(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login__form\",\n        onSubmit: handleSubmit,\n        onChange: validateForm,\n        ref: formRef,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"login__title\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: `login__input ${emailError !== '' && 'popup__input_type_error'}`,\n          id: \"email-input\",\n          type: \"email\",\n          name: \"email\",\n          minLength: \"2\",\n          maxLength: \"40\",\n          required: true,\n          placeholder: \"Email\",\n          value: email,\n          onChange: handleEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `popup__input-error  ${emailError !== '' && 'popup__error_visible'}`,\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: `login__input ${passwordError !== '' && 'popup__input_type_error'}`,\n          id: \"password-input\",\n          type: \"password\",\n          name: \"password\",\n          minLength: \"7\",\n          maxLength: \"12\",\n          pattern: \"[A-Za-z-_]\",\n          required: true,\n          placeholder: \"Password\",\n          value: password,\n          onChange: handlePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `popup__input-error ${passwordError !== '' && 'popup__error_visible'}`,\n          children: passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `login__submit ${formInvalid && 'login__submit_disabled'}`,\n          disabled: formInvalid,\n          type: \"submit\",\n          children: [`${loading ? 'Loading...' : 'Log In'}`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login__caption\",\n        children: [\"Not a member yet? Sign up \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"./signup\",\n          className: \"login__link\",\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 63\n        }, this), \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"ckJBfa5MBL6/xyCYCiSUMPvW+4U=\");\n\n_c = Login;\nexport default _c2 = withRouter(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/ZEE/Yandex/react-around-api-full/frontend/src/components/Login.js"],"names":["React","Link","withRouter","Login","props","loading","setLoading","useState","email","setEmail","password","setPassword","useEffect","setFormInvalid","handleSubmit","e","preventDefault","formInvalid","logInUser","formRef","useRef","emailError","setEmailError","passwordError","setPasswordError","handleEmail","target","value","fieldValidator","handlePassword","validateForm","formValidator","current"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAA;;AACnB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,KAAK,CAACO,QAAN,CAAe,KAAf,CAA9B,CAFmB,CAGnB;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACO,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BX,KAAK,CAACO,QAAN,CAAe,EAAf,CAAhC,CALmB,CAOnB;;AACAP,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAI;AAClBC,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHD,EAGE,EAHF;;AAKA,WAASQ,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAG,CAACC,WAAJ,EAAgB;AACd;AACA;AACAX,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,MAAAA,KAAK,CAACc,SAAN,CAAgBV,KAAhB,EAAuBE,QAAvB,EAJc,CAKd;;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEE,QAAMa,OAAO,GAAGnB,KAAK,CAACoB,MAAN,EAAhB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BtB,KAAK,CAACO,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoCxB,KAAK,CAACO,QAAN,CAAe,EAAf,CAA1C;AACA,QAAM,CAACU,WAAD,EAAcJ,cAAd,IAAgCb,KAAK,CAACO,QAAN,CAAe,IAAf,CAAtC;;AAGF,WAASkB,WAAT,CAAqBV,CAArB,EAAwB;AACtB;AACAN,IAAAA,QAAQ,CAACM,CAAC,CAACW,MAAF,CAASC,KAAV,CAAR,CAFsB,CAGtB;;AACAvB,IAAAA,KAAK,CAACwB,cAAN,CAAqBb,CAAC,CAACW,MAAvB,EAA+BJ,aAA/B;AACD;;AAED,WAASO,cAAT,CAAwBd,CAAxB,EAA2B;AACzB;AACAJ,IAAAA,WAAW,CAACI,CAAC,CAACW,MAAF,CAASC,KAAV,CAAX,CAFyB,CAGzB;;AACAvB,IAAAA,KAAK,CAACwB,cAAN,CAAqBb,CAAC,CAACW,MAAvB,EAA+BF,gBAA/B;AACD;;AAED,WAASM,YAAT,GAAuB;AACrB1B,IAAAA,KAAK,CAAC2B,aAAN,CAAoBZ,OAAO,CAACa,OAA5B,EAAoC,eAApC,IAAuDnB,cAAc,CAAC,IAAD,CAArE,GAA8EA,cAAc,CAAC,KAAD,CAA5F;AACD;;AAEC,sBACE;AAAS,IAAA,SAAS,EAAC,OAAnB;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,QAAQ,EAAEC,YAAxC;AAAsD,QAAA,QAAQ,EAAEgB,YAAhE;AAA8E,QAAA,GAAG,EAAEX,OAAnF;AAAA,gCACA;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEE;AAAO,UAAA,SAAS,EAAG,gBAAeE,UAAU,KAAI,EAAd,IAAoB,yBAA0B,EAAhF;AAAmF,UAAA,EAAE,EAAC,aAAtF;AAAoG,UAAA,IAAI,EAAC,OAAzG;AAAiH,UAAA,IAAI,EAAC,OAAtH;AAA8H,UAAA,SAAS,EAAC,GAAxI;AAA4I,UAAA,SAAS,EAAC,IAAtJ;AAA2J,UAAA,QAAQ,MAAnK;AAAoK,UAAA,WAAW,EAAC,OAAhL;AAAwL,UAAA,KAAK,EAAEb,KAA/L;AAAsM,UAAA,QAAQ,EAAEiB;AAAhN;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGI;AAAM,UAAA,SAAS,EAAG,uBAAsBJ,UAAU,KAAI,EAAd,IAAoB,sBAAuB,EAAnF;AAAA,oBAAuFA;AAAvF;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAIE;AAAO,UAAA,SAAS,EAAG,gBAAeE,aAAa,KAAI,EAAjB,IAAuB,yBAA0B,EAAnF;AAAsF,UAAA,EAAE,EAAC,gBAAzF;AAA0G,UAAA,IAAI,EAAC,UAA/G;AAA0H,UAAA,IAAI,EAAC,UAA/H;AAA0I,UAAA,SAAS,EAAC,GAApJ;AAAwJ,UAAA,SAAS,EAAC,IAAlK;AAAuK,UAAA,OAAO,EAAC,YAA/K;AAA4L,UAAA,QAAQ,MAApM;AAAqM,UAAA,WAAW,EAAC,UAAjN;AAA4N,UAAA,KAAK,EAAEb,QAAnO;AAA6O,UAAA,QAAQ,EAAEmB;AAAvP;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKI;AAAM,UAAA,SAAS,EAAG,sBAAqBN,aAAa,KAAI,EAAjB,IAAuB,sBAAuB,EAArF;AAAA,oBAAyFA;AAAzF;AAAA;AAAA;AAAA;AAAA,gBALJ,eAME;AAAQ,UAAA,SAAS,EAAG,iBAAgBN,WAAW,IAAI,wBAAyB,EAA5E;AAA+E,UAAA,QAAQ,EAAEA,WAAzF;AAAsG,UAAA,IAAI,EAAC,QAA3G;AAAA,qBAAsH,GAAEZ,OAAO,GAAG,YAAH,GAAgB,QAAS,EAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA,8DAAwD,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,UAAT;AAAoB,UAAA,SAAS,EAAC,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAzEQF,K;;KAAAA,K;AA2ET,qBAAeD,UAAU,CAACC,KAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nfunction Login(props){\r\n  //loading\r\n  const [loading, setLoading] = React.useState(false);\r\n  //form field\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  //reset form on open\r\n  React.useEffect(()=>{\r\n    setFormInvalid(true);\r\n    setLoading(false);\r\n  },[])\r\n  \r\n  function handleSubmit(e) {\r\n    e.preventDefault();   \r\n    if(!formInvalid){\r\n      //check if the form is valid before sending\r\n      //login user\r\n      setLoading(true);\r\n      props.logInUser(email, password);\r\n      //set loading\r\n      setLoading(false);\r\n    }\r\n  } \r\n\r\n  /* CLIENT FORM VALIDATION\r\n    By default, no validation error for blank required field is \r\n    shown at the beginning, but the submit button will be\r\n    disabled.\r\n\r\n    The button style/disabled state and individual field validations are \r\n    independent of one another. Field validations control only the field styles, \r\n    and form/button validation controls the ability to send the form\r\n  */\r\n  const formRef = React.useRef();\r\n  const [emailError, setEmailError] = React.useState('');\r\n  const [passwordError, setPasswordError] = React.useState('');\r\n  const [formInvalid, setFormInvalid] = React.useState(true)\r\n\r\n\r\nfunction handleEmail(e) {\r\n  //set value\r\n  setEmail(e.target.value);\r\n  //set error\r\n  props.fieldValidator(e.target, setEmailError)\r\n}\r\n\r\nfunction handlePassword(e) {\r\n  //set value\r\n  setPassword(e.target.value);\r\n  //set error\r\n  props.fieldValidator(e.target, setPasswordError)\r\n}\r\n\r\nfunction validateForm(){\r\n  props.formValidator(formRef.current,'.login__input') ? setFormInvalid(true) : setFormInvalid(false);\r\n}\r\n\r\n  return(\r\n    <section className=\"login\">\r\n    <div className=\"login__container\">\r\n      <form className=\"login__form\" onSubmit={handleSubmit} onChange={validateForm} ref={formRef}>\r\n      <h1 className=\"login__title\">Log in</h1>\r\n        <input className={`login__input ${emailError !=='' && 'popup__input_type_error'}`} id=\"email-input\" type=\"email\" name=\"email\" minLength=\"2\" maxLength=\"40\" required placeholder=\"Email\" value={email} onChange={handleEmail}/>\r\n          <span className={`popup__input-error  ${emailError !=='' && 'popup__error_visible'}`}>{emailError}</span>\r\n        <input className={`login__input ${passwordError !=='' && 'popup__input_type_error'}`} id=\"password-input\" type=\"password\" name=\"password\" minLength=\"7\" maxLength=\"12\" pattern=\"[A-Za-z-_]\" required placeholder=\"Password\" value={password} onChange={handlePassword}/>\r\n          <span className={`popup__input-error ${passwordError !=='' && 'popup__error_visible'}`}>{passwordError}</span>\r\n        <button className={`login__submit ${formInvalid && 'login__submit_disabled'}`} disabled={formInvalid} type=\"submit\">{`${loading ? 'Loading...':'Log In'}`} </button>\r\n      </form>\r\n      <p className=\"login__caption\">Not a member yet? Sign up <Link to=\"./signup\" className=\"login__link\">here</Link>!</p>\r\n    </div>\r\n  </section>  \r\n  )\r\n}\r\n\r\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}