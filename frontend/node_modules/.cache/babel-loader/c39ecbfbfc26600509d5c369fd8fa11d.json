{"ast":null,"code":"import { baseURL as BASE_URL } from './config';\n\nclass Auth {\n  register(email, password) {\n    return fetch(`${BASE_URL}/signup`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"email\": email,\n        \"password\": password\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Error: ${res.statusText}`);\n    });\n  }\n\n  login(email, password) {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"email\": email,\n        \"password\": password\n      })\n    }).then(response => response.json()).then(res => {\n      if (res.token) {\n        localStorage.setItem('token', res.token);\n        return res;\n      }\n    });\n  }\n\n  authorize() {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `${localStorage.getItem('token')}`\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Error: ${res.statusText}`);\n    });\n  }\n\n}\n\nexport const auth = new Auth();","map":{"version":3,"sources":["C:/Users/ZEE/Yandex/react-around-api-full/frontend/src/utils/auth.js"],"names":["baseURL","BASE_URL","Auth","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","statusText","login","response","token","localStorage","setItem","authorize","authorization","getItem","auth"],"mappings":"AAAA,SAAQA,OAAO,IAAIC,QAAnB,QAAkC,UAAlC;;AAEA,MAAMC,IAAN,CAAU;AACRC,EAAAA,QAAQ,CAACC,KAAD,EAAQC,QAAR,EAAiB;AACvB,WAAOC,KAAK,CAAE,GAAEL,QAAS,SAAb,EAAuB;AACjCM,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAFwB;AAMjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,iBAAUP,KAAX;AAAkB,oBAAaC;AAA/B,OAAf;AAN2B,KAAvB,CAAL,CAQNO,IARM,CAQAC,GAAD,IAAS;AACb,UAAGA,GAAG,CAACC,EAAP,EAAU;AACR,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,aAAOC,OAAO,CAACC,MAAR,CAAgB,UAASJ,GAAG,CAACK,UAAW,EAAxC,CAAP;AACD,KAbM,CAAP;AAcD;;AAEDC,EAAAA,KAAK,CAACf,KAAD,EAAQC,QAAR,EAAiB;AACpB,WAAOC,KAAK,CAAE,GAAEL,QAAS,SAAb,EAAuB;AACjCM,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFwB;AAKjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,iBAAUP,KAAX;AAAkB,oBAAaC;AAA/B,OAAf;AAL2B,KAAvB,CAAL,CAONO,IAPM,CAOAQ,QAAD,IAAcA,QAAQ,CAACL,IAAT,EAPb,EAQNH,IARM,CAQAC,GAAD,IAAS;AACb,UAAGA,GAAG,CAACQ,KAAP,EAAa;AACXC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BV,GAAG,CAACQ,KAAlC;AACA,eAAOR,GAAP;AACD;AACF,KAbM,CAAP;AAcD;;AAEDW,EAAAA,SAAS,GAAE;AACT,WAAOlB,KAAK,CAAE,GAAEL,QAAS,WAAb,EAAyB;AACnCM,MAAAA,MAAM,EAAE,KAD2B;AAEnCC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPiB,QAAAA,aAAa,EAAG,GAAEH,YAAY,CAACI,OAAb,CAAqB,OAArB,CAA8B;AAFzC;AAF0B,KAAzB,CAAL,CAONd,IAPM,CAOAC,GAAD,IAAS;AACb,UAAGA,GAAG,CAACC,EAAP,EAAU;AACR,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,aAAOC,OAAO,CAACC,MAAR,CAAgB,UAASJ,GAAG,CAACK,UAAW,EAAxC,CAAP;AACD,KAZM,CAAP;AAaD;;AAjDO;;AAqDV,OAAO,MAAMS,IAAI,GAAG,IAAIzB,IAAJ,EAAb","sourcesContent":["import {baseURL as BASE_URL} from './config';\r\n\r\nclass Auth{\r\n  register(email, password){\r\n    return fetch(`${BASE_URL}/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\"email\" : email, \"password\" : password})\r\n    })\r\n    .then((res) => {\r\n      if(res.ok){\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Error: ${res.statusText}`);\r\n    })\r\n  }\r\n\r\n  login(email, password){\r\n    return fetch(`${BASE_URL}/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\"email\" : email, \"password\" : password})\r\n    })\r\n    .then((response) => response.json())\r\n    .then((res) => {\r\n      if(res.token){\r\n        localStorage.setItem('token', res.token);\r\n        return res;\r\n      }\r\n    })\r\n  }\r\n\r\n  authorize(){\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `${localStorage.getItem('token')}`\r\n      }\r\n    })\r\n    .then((res) => {\r\n      if(res.ok){\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Error: ${res.statusText}`);\r\n    })  \r\n  }\r\n\r\n}\r\n\r\nexport const auth = new Auth();"]},"metadata":{},"sourceType":"module"}