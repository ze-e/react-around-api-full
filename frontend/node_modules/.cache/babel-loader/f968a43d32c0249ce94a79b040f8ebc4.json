{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ZEE\\\\Yandex\\\\react-around-api-full\\\\frontend\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch, useHistory, Redirect } from 'react-router-dom'; //component\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithImage from './PopupWithImage';\nimport EditProfilePopUp from './EditProfilePopUp';\nimport EditAvatarPopUp from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport DeletePopup from './DeletePopup'; //login\n\nimport Login from './Login';\nimport SignUp from './SignUp';\nimport { auth } from '../utils/auth';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip'; //context\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'; //util\n\nimport { api } from '../utils/api';\nimport { formValidator } from '../utils/formvalidator';\n\nfunction App() {\n  _s();\n\n  //history\n  const history = useHistory(); //state\n\n  const [selectedCard, setselectedCard] = React.useState({\n    link: '#'\n  });\n  const [currentUser, setcurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [loggedIn, setloggedIn] = React.useState(false);\n  const [userEmail, setUserEmail] = React.useState(false); //isOpen props for popups\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setisEditAvatarPopupOpen] = React.useState(false);\n  const [isDeletePopupOpen, setisDeletePopupOpen] = React.useState(false);\n  const [isCardOpen, setisCardOpen] = React.useState(false);\n  const [isToolTipOpen, setisToolTipOpen] = React.useState(false);\n  const [isSuccess, setisSuccess] = React.useState(false); //update user functions\n\n  function handleUpdateUser(name, about) {\n    api.editProfile(name, about).then(data => {\n      setcurrentUser(data);\n    }).catch(err => {\n      console.log(err);\n      alert(err);\n    }).finally(() => {\n      closeAllPopups();\n    });\n  }\n\n  function handleUpdateAvatar(link) {\n    api.editAvatar(link).then(data => {\n      setcurrentUser(data);\n    }).catch(err => {\n      console.log(err);\n      alert(err);\n    }).finally(() => {\n      closeAllPopups();\n    });\n  } //card functions\n\n\n  function handleDeleteClick(card) {\n    setselectedCard(card);\n    setisDeletePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setisCardOpen(true);\n    setselectedCard(card);\n  }\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Send a request to the API and getting the updated card data\n\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      // Create a new array based on the existing one and putting a new card into it\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Update the state\n\n      setCards(newCards);\n    }).catch(err => {\n      console.log(err);\n      alert(err);\n    }).finally(() => {\n      closeAllPopups();\n    });\n  }\n\n  function handleCardDelete(cardId) {\n    //delete the card\n    api.deleteCard(cardId).then(() => {\n      const newCards = cards.filter(c => {\n        return c._id !== cardId;\n      });\n      setCards(newCards);\n    }).catch(err => {\n      console.log(err);\n      alert(err);\n    }).finally(() => {\n      closeAllPopups();\n    });\n  } //popup functions\n\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setisEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceSubmit(name, link) {\n    api.addCard(name, link).then(newCard => {\n      setCards([...cards, newCard]);\n    }).catch(err => {\n      console.log(err);\n      alert(err);\n    }).finally(() => {\n      closeAllPopups();\n    });\n  } //login functions\n\n\n  function handleLogin(isLoggedIn) {\n    setloggedIn(isLoggedIn);\n\n    if (!isLoggedIn) {\n      //delete token\n      localStorage.removeItem('token');\n    }\n  }\n\n  function handleDisplayInfoTooltip(success) {\n    setisSuccess(success);\n    setisToolTipOpen(true);\n  }\n\n  function handleRegisterUser(email, password) {\n    auth.register(email, password).then(res => {\n      if (res) {\n        handleDisplayInfoTooltip(true);\n        history.push(\"/login\");\n        handleLogInUser(email, password);\n      } else {\n        handleDisplayInfoTooltip(false);\n      }\n    });\n  }\n\n  function handleLogInUser(email, password) {\n    auth.login(email, password).then(res => {\n      if (res) {\n        handleLogin(true);\n        history.push(\"/\");\n      } else {\n        handleDisplayInfoTooltip(false);\n      }\n    });\n  } //close and reset popups\n\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setisEditAvatarPopupOpen(false);\n    setisDeletePopupOpen(false);\n    setisCardOpen(false);\n    setisToolTipOpen(false);\n    setselectedCard({\n      link: '#'\n    });\n  } //click outside container \n\n\n  function handleClickOutsideForm(e, selector) {\n    if (e.target.className.includes(selector)) {\n      closeAllPopups();\n    }\n  } //close window when escape is pressed\n\n\n  const handleKeyPress = React.useCallback(e => {\n    if (e.key === 'Escape') {\n      closeAllPopups();\n    }\n  }, []); //add Escape event\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [handleKeyPress]); //get user and initial cards\n\n  React.useEffect(() => {\n    //get user from token\n    if (localStorage.getItem('token')) {\n      const token = localStorage.getItem('token');\n      setloggedIn(true);\n      auth.authorize(token).then(data => {\n        //set token\n        api.setToken(token);\n        setUserEmail(data.email);\n        api.getUser().then(data => {\n          setcurrentUser(data); //get cards\n\n          api.getCards().then(data => {\n            setCards(data);\n          }).catch(err => {\n            console.log(err);\n          });\n        }).catch(err => {\n          console.log(err);\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    } //after loading everything, set loading to false\n\n\n    setLoading(false);\n  }, [loggedIn]);\n  return (//show loading message if user and cards are not loaded\n    loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App page loading\",\n      children: \"Loading page...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App page\",\n      children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n        value: currentUser,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          loggedIn: loggedIn,\n          login: handleLogin,\n          email: userEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            children: /*#__PURE__*/_jsxDEV(SignUp, {\n              formValidator: formValidator.formValidator,\n              fieldValidator: formValidator.fieldValidator,\n              registerUser: handleRegisterUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            children: () => !loggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n              formValidator: formValidator.formValidator,\n              fieldValidator: formValidator.fieldValidator,\n              logInUser: handleLogInUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 5\n            }, this) :\n            /*#__PURE__*/\n            //redirect to main if already logged in\n            _jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            path: \"*\",\n            loggedIn: loggedIn,\n            component: Main,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onEditAvatar: handleEditAvatarClick,\n            onCardClick: handleCardClick,\n            card: selectedCard,\n            cards: cards,\n            onCardLike: handleCardLike,\n            onCardDelete: handleDeleteClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopUp, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser,\n          onOutsideClick: handleClickOutsideForm,\n          formValidator: formValidator.formValidator,\n          fieldValidator: formValidator.fieldValidator\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit,\n          onOutsideClick: handleClickOutsideForm,\n          formValidator: formValidator.formValidator,\n          fieldValidator: formValidator.fieldValidator\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopUp, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar,\n          onOutsideClick: handleClickOutsideForm,\n          formValidator: formValidator.formValidator,\n          fieldValidator: formValidator.fieldValidator\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithImage, {\n          card: selectedCard,\n          isOpen: isCardOpen,\n          onClose: closeAllPopups,\n          onOutsideClick: handleClickOutsideForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(DeletePopup, {\n          isOpen: isDeletePopupOpen,\n          onClose: closeAllPopups,\n          card: selectedCard,\n          onDelete: handleCardDelete,\n          onOutsideClick: handleClickOutsideForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n          isOpen: isToolTipOpen,\n          onClose: closeAllPopups,\n          onOutsideClick: handleClickOutsideForm,\n          success: isSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 1\n    }, this)\n  );\n}\n\n_s(App, \"3jzRyV33N6obFS6SoG1ije9IsMo=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ZEE/Yandex/react-around-api-full/frontend/src/components/App.js"],"names":["React","Route","Switch","useHistory","Redirect","Header","Main","Footer","PopupWithImage","EditProfilePopUp","EditAvatarPopUp","AddPlacePopup","DeletePopup","Login","SignUp","auth","ProtectedRoute","InfoTooltip","CurrentUserContext","api","formValidator","App","history","selectedCard","setselectedCard","useState","link","currentUser","setcurrentUser","cards","setCards","loading","setLoading","loggedIn","setloggedIn","userEmail","setUserEmail","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setisEditAvatarPopupOpen","isDeletePopupOpen","setisDeletePopupOpen","isCardOpen","setisCardOpen","isToolTipOpen","setisToolTipOpen","isSuccess","setisSuccess","handleUpdateUser","name","about","editProfile","then","data","catch","err","console","log","alert","finally","closeAllPopups","handleUpdateAvatar","editAvatar","handleDeleteClick","card","handleCardClick","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","cardId","deleteCard","filter","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleAddPlaceSubmit","addCard","handleLogin","isLoggedIn","localStorage","removeItem","handleDisplayInfoTooltip","success","handleRegisterUser","email","password","register","res","push","handleLogInUser","login","handleClickOutsideForm","e","selector","target","className","includes","handleKeyPress","useCallback","key","useEffect","window","addEventListener","removeEventListener","getItem","token","authorize","setToken","getUser","getCards","fieldValidator"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Route, Switch, useHistory, Redirect } from 'react-router-dom';\r\n\r\n//component\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithImage from './PopupWithImage';\r\nimport EditProfilePopUp from './EditProfilePopUp';\r\nimport EditAvatarPopUp from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport DeletePopup from './DeletePopup';\r\n\r\n//login\r\nimport Login from './Login';\r\nimport SignUp from './SignUp';\r\nimport {auth} from '../utils/auth';\r\nimport ProtectedRoute from './ProtectedRoute'\r\nimport InfoTooltip from './InfoTooltip';\r\n\r\n//context\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n//util\r\nimport {api} from '../utils/api';\r\nimport {formValidator} from '../utils/formvalidator'\r\n\r\nfunction App() {\r\n  //history\r\n  const history = useHistory();\r\n\r\n  //state\r\n  const [selectedCard, setselectedCard] = React.useState({link:'#'});\r\n  const [currentUser, setcurrentUser] = React.useState({});\r\n  const [cards, setCards] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [loggedIn, setloggedIn] = React.useState(false);\r\n  const [userEmail, setUserEmail] = React.useState(false);\r\n\r\n  //isOpen props for popups\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setisEditAvatarPopupOpen] = React.useState(false);\r\n  const [isDeletePopupOpen, setisDeletePopupOpen] = React.useState(false); \r\n  const [isCardOpen, setisCardOpen] = React.useState(false);\r\n  const [isToolTipOpen, setisToolTipOpen] = React.useState(false);\r\n  const [isSuccess, setisSuccess] = React.useState(false);\r\n\r\n  //update user functions\r\n  function handleUpdateUser(name, about){\r\n    api.editProfile(name, about)\r\n    .then((data)=>{\r\n      setcurrentUser(data);\r\n    })\r\n    .catch((err) => { \r\n      console.log(err);  \r\n      alert(err);\r\n    })\r\n    .finally(()=>{closeAllPopups()})\r\n  }\r\n\r\n  function handleUpdateAvatar(link){\r\n    api.editAvatar(link)\r\n    .then((data)=>{\r\n      setcurrentUser(data);\r\n    })\r\n    .catch((err) => { \r\n      console.log(err);\r\n      alert(err);\r\n    })\r\n    .finally(()=>{closeAllPopups()})\r\n  }\r\n  //card functions\r\n  function handleDeleteClick(card){\r\n    setselectedCard(card);\r\n    setisDeletePopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card){\r\n    setisCardOpen(true);\r\n    setselectedCard(card);\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    // Check one more time if this card was already liked\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    \r\n    // Send a request to the API and getting the updated card data\r\n    api.changeLikeCardStatus(card._id, isLiked).then((newCard) => {\r\n        // Create a new array based on the existing one and putting a new card into it\r\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n      // Update the state\r\n      setCards(newCards);\r\n    })\r\n    .catch((err) => { \r\n      console.log(err);\r\n      alert(err);\r\n    })\r\n    .finally(()=>{closeAllPopups()})\r\n  } \r\n\r\n  function handleCardDelete(cardId){\r\n    //delete the card\r\n    api.deleteCard(cardId)\r\n    .then(() => { \r\n      const newCards = cards.filter((c)=>{\r\n        return c._id !== cardId;\r\n      }); \r\n      setCards(newCards);\r\n    })\r\n    .catch((err) => { \r\n        console.log(err); \r\n        alert(err);\r\n      })\r\n    .finally(()=>{closeAllPopups()})\r\n  }\r\n  \r\n  //popup functions\r\n  function handleEditProfileClick(){\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick(){\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleEditAvatarClick(){\r\n    setisEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceSubmit(name, link){\r\n    api.addCard(name,link).then((newCard) => { \r\n      setCards([...cards, newCard]); \r\n    })\r\n    .catch((err) => { \r\n        console.log(err); \r\n        alert(err);\r\n      })\r\n    .finally(()=>{closeAllPopups()})\r\n  }\r\n\r\n  //login functions\r\n  function handleLogin(isLoggedIn){\r\n    setloggedIn(isLoggedIn);\r\n    if(!isLoggedIn){\r\n    //delete token\r\n    localStorage.removeItem('token');\r\n    }\r\n  }\r\n\r\n  function handleDisplayInfoTooltip(success){\r\n    setisSuccess(success);\r\n    setisToolTipOpen(true);\r\n  }\r\n\r\n  function handleRegisterUser(email, password){\r\n    auth.register(email, password)\r\n    .then((res) => {\r\n      if(res){\r\n        handleDisplayInfoTooltip(true);\r\n        history.push(\"/login\");\r\n        handleLogInUser(email, password);\r\n      }\r\n      else{\r\n        handleDisplayInfoTooltip(false);\r\n      }\r\n    })\r\n  }\r\n\r\n  function handleLogInUser(email, password){\r\n    auth.login(email, password)\r\n    .then((res) => {\r\n      if(res){\r\n        handleLogin(true);\r\n        history.push(\"/\");\r\n      }\r\n      else{\r\n        handleDisplayInfoTooltip(false);\r\n      }\r\n    })\r\n  }\r\n  \r\n  //close and reset popups\r\n  function closeAllPopups(){\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setisEditAvatarPopupOpen(false);\r\n    setisDeletePopupOpen(false);\r\n    setisCardOpen(false);\r\n    setisToolTipOpen(false);\r\n    setselectedCard({link:'#'});\r\n  }\r\n  \r\n  //click outside container \r\n  function handleClickOutsideForm(e, selector){\r\n    if(e.target.className.includes(selector)){\r\n      closeAllPopups();\r\n    }\r\n  }\r\n\r\n  //close window when escape is pressed\r\n  const handleKeyPress = React.useCallback((e) => {\r\n      if(e.key === 'Escape'){ \r\n        closeAllPopups(); \r\n      } \r\n    }, []);\r\n\r\n//add Escape event\r\nReact.useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyPress);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyPress);\r\n    };\r\n  }, [handleKeyPress]);\r\n\r\n    //get user and initial cards\r\n    React.useEffect(()=>{\r\n      //get user from token\r\n      if (localStorage.getItem('token')) {\r\n        const token = localStorage.getItem('token');\r\n        setloggedIn(true);\r\n        auth.authorize(token)\r\n        .then((data)=>{\r\n\r\n          //set token\r\n          api.setToken(token);\r\n          setUserEmail(data.email);\r\n          api.getUser()\r\n          .then((data)=>{\r\n            setcurrentUser(data);\r\n\r\n            //get cards\r\n            api.getCards()\r\n            .then((data) => {  \r\n              setCards(data)\r\n            })\r\n            .catch((err) => { \r\n                console.log(err);\r\n              })\r\n          })\r\n          .catch((err) => { \r\n            console.log(err);\r\n          })\r\n        })\r\n        .catch((err) => { \r\n            console.log(err);\r\n          })\r\n      }\r\n      //after loading everything, set loading to false\r\n      setLoading(false);\r\n    },[loggedIn])\r\n\r\n  return (\r\n    //show loading message if user and cards are not loaded\r\n  loading ? <div className=\"App page loading\">Loading page...</div> :\r\n\r\n<div className=\"App page\">\r\n<CurrentUserContext.Provider value={currentUser}>\r\n  <Header loggedIn={loggedIn} login={handleLogin} email={userEmail} />\r\n  <Switch>\r\n  <Route path=\"/signup\">\r\n    <SignUp\r\n      formValidator={formValidator.formValidator}\r\n      fieldValidator={formValidator.fieldValidator}\r\n      registerUser={handleRegisterUser}\r\n    />\r\n  </Route>\r\n  <Route path=\"/login\">\r\n  {\r\n    () => !loggedIn ?\r\n    <Login\r\n      formValidator={formValidator.formValidator}\r\n      fieldValidator={formValidator.fieldValidator}\r\n      logInUser={handleLogInUser}\r\n    /> : \r\n    //redirect to main if already logged in\r\n    <Redirect to='/' />\r\n  }\r\n  </Route>\r\n  <ProtectedRoute path=\"*\" \r\n    loggedIn={loggedIn} \r\n    component={Main}\r\n    onEditProfile = {handleEditProfileClick}\r\n    onAddPlace = {handleAddPlaceClick}\r\n    onEditAvatar = {handleEditAvatarClick}\r\n    onCardClick = {handleCardClick}\r\n    card = {selectedCard}\r\n    cards = {cards}\r\n    onCardLike = {handleCardLike}\r\n    onCardDelete = {handleDeleteClick}\r\n  >\r\n  </ProtectedRoute>\r\n  </Switch>\r\n  <Footer />\r\n  <EditProfilePopUp \r\n    isOpen={isEditProfilePopupOpen} \r\n    onClose={closeAllPopups}\r\n    onUpdateUser={handleUpdateUser}\r\n    onOutsideClick={handleClickOutsideForm}\r\n    formValidator={formValidator.formValidator}\r\n    fieldValidator={formValidator.fieldValidator}\r\n  />\r\n\r\n  <AddPlacePopup \r\n    isOpen={isAddPlacePopupOpen} \r\n    onClose={closeAllPopups}\r\n    onAddPlace={handleAddPlaceSubmit}\r\n    onOutsideClick={handleClickOutsideForm}\r\n    formValidator={formValidator.formValidator}\r\n    fieldValidator={formValidator.fieldValidator}\r\n    />\r\n\r\n  <EditAvatarPopUp \r\n    isOpen={isEditAvatarPopupOpen} \r\n    onClose={closeAllPopups}\r\n    onUpdateAvatar={handleUpdateAvatar}\r\n    onOutsideClick={handleClickOutsideForm}\r\n    formValidator={formValidator.formValidator}\r\n    fieldValidator={formValidator.fieldValidator}\r\n    />\r\n  \r\n  <PopupWithImage \r\n    card={selectedCard} \r\n    isOpen={isCardOpen}\r\n    onClose={closeAllPopups}\r\n    onOutsideClick={handleClickOutsideForm}\r\n    />\r\n\r\n  <DeletePopup \r\n    isOpen={isDeletePopupOpen} \r\n    onClose={closeAllPopups}\r\n    card = {selectedCard}\r\n    onDelete = {handleCardDelete}\r\n    onOutsideClick={handleClickOutsideForm}\r\n  /> \r\n\r\n  <InfoTooltip \r\n    isOpen={isToolTipOpen} \r\n    onClose={closeAllPopups}\r\n    onOutsideClick={handleClickOutsideForm}\r\n    success={isSuccess}\r\n  />\r\n</CurrentUserContext.Provider>\r\n</div>\r\n)}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}